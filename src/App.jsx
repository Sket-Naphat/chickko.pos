// src/App.jsx
import { Routes, Route, useLocation, Navigate } from "react-router-dom";
import { useEffect, useState } from "react";

import Navbar from "./components/Navbar";
import LoadingBar from "./components/LoadingBar";
import Toast from "./components/Toast";

import RequireAuth from "../routes/RequireAuth";                 // ‚úÖ ‡∏Å‡∏±‡∏ô‡∏´‡∏ô‡πâ‡∏≤: ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ token/‡πÑ‡∏°‡πà‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏
import { bindLoadingListener, bindErrorListener } from "./lib/api"; // ‚úÖ ‡∏ú‡∏π‡∏Å interceptors ‚Üí UI ‡∏Å‡∏•‡∏≤‡∏á

// ‡πÄ‡∏û‡∏à
import Login from "./pages/Login";
import Home from "./pages/Home";
import Dashboard from "./pages/Dashboard";
import Cost from "./pages/Cost";
import Stock from "./pages/Stock";
import WorkTime from "./pages/Worktime";
import CheckStock from "./pages/CheckStock";
import StockIn from "./pages/StockIn"; // üëâ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡πá‡∏ô StockInDetail ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô
import StockItem from "./pages/StockItem";
import Register from "./pages/Register"; 
import TimeClock from "./pages/TimeClock";
import Delivery from "./pages/Delivery";

function App() {
  const location = useLocation();

  // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° "/register" ‡πÉ‡∏ô hideNavbarPaths
  const hideNavbarPaths = ["/", "/login", "/home", "/register"];
  const shouldShowNavbar = !hideNavbarPaths.includes(location.pathname);

  // ‚úÖ ‡∏™‡∏≤‡∏¢‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å axios interceptors ‚Üí ‡πÅ‡∏ñ‡∏ö‡πÇ‡∏´‡∏•‡∏î + toast
  const [loading, setLoading] = useState(false);
  const [toast, setToast] = useState("");

  useEffect(() => {
    bindLoadingListener(setLoading);                            // ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ request ‡∏Ñ‡πâ‡∏≤‡∏á ‚Üí show loading bar
    bindErrorListener((msg) => {                                // error ‡∏Å‡∏•‡∏≤‡∏á ‚Üí ‡πÇ‡∏ä‡∏ß‡πå toast
      setToast(msg);
      setTimeout(() => setToast(""), 4000);
    });
  }, []);

  return (
    <>
      {/* UI ‡∏Å‡∏•‡∏≤‡∏á */}
      <LoadingBar show={loading} />
      <Toast message={toast} onClose={() => setToast("")} />

      {shouldShowNavbar ? (
        /* ======================= Layout ‡∏ó‡∏µ‡πà "‡∏°‡∏µ Navbar" (‡∏´‡∏•‡∏±‡∏á‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô) ======================= */
        <div className="flex flex-col min-h-screen">
          <Navbar />
          <main className="flex-1">
            <Routes>
              {/* ‚úÖ ‡∏Å‡∏±‡∏ô‡∏ó‡∏∏‡∏Å‡∏´‡∏ô‡πâ‡∏≤‡∏†‡∏≤‡∏¢‡πÉ‡∏ï‡πâ layout ‡∏ô‡∏µ‡πâ‡∏î‡πâ‡∏ß‡∏¢ RequireAuth */}
              <Route element={<RequireAuth />}>
                <Route path="/dashboard" element={<Dashboard />} />
                <Route path="/cost" element={<Cost />} />
                <Route path="/stock" element={<Stock />} />
                <Route path="/worktime" element={<WorkTime />} />
                <Route path="/timeclock" element={<TimeClock />} />
                <Route path="/checkstock/:orderId" element={<CheckStock />} />
                <Route path="/stockin/:orderId" element={<StockIn />} />
                <Route path="/stockitem" element={<StockItem />} />
                <Route path="/delivery" element={<Delivery/>}/>
              </Route>

              {/* ‡πÑ‡∏õ path ‡πÅ‡∏õ‡∏•‡∏Å ‡πÜ ‡∏Ç‡∏ì‡∏∞‡∏≠‡∏¢‡∏π‡πà layout ‡∏ô‡∏µ‡πâ ‚Üí ‡∏™‡πà‡∏á‡πÑ‡∏õ /login */}
              <Route path="*" element={<Navigate to="/login" replace />} />
            </Routes>
          </main>
        </div>
      ) : (
        /* ======================= ‡∏´‡∏ô‡πâ‡∏≤ "‡πÑ‡∏°‡πà‡∏°‡∏µ Navbar" (login + register + home) ======================= */
        <Routes>
          {/* ‚úÖ Public routes - ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á login */}
          <Route path="/" element={<Login />} />
          <Route path="/login" element={<Login />} />
          <Route path="/register" element={<Register />} />

          {/* ‚úÖ Protected routes - ‡∏ï‡πâ‡∏≠‡∏á login ‡πÅ‡∏ï‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ Navbar */}
          <Route element={<RequireAuth />}>
            <Route path="/home" element={<Home />} />
          </Route>

          <Route path="*" element={<div className="p-6">Not Found</div>} />
        </Routes>
      )}
    </>
  );
}

export default App;